{"ast":null,"code":"import axios from 'axios';\nconst API_URL = '/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const authService = {\n  login: async (email, password) => {\n    const response = await api.post('/auth/login', {\n      email,\n      password\n    });\n    return response.data;\n  },\n  register: async userData => {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n  },\n  getCurrentUser: async () => {\n    const response = await api.get('/auth/me');\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","authService","login","email","password","response","post","data","register","userData","getCurrentUser","get"],"sources":["C:/Users/ADNAN/Desktop/project/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = '/api';\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add token to requests\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport const authService = {\r\n  login: async (email, password) => {\r\n    const response = await api.post('/auth/login', { email, password });\r\n    return response.data;\r\n  },\r\n\r\n  register: async (userData) => {\r\n    const response = await api.post('/auth/register', userData);\r\n    return response.data;\r\n  },\r\n\r\n  getCurrentUser: async () => {\r\n    const response = await api.get('/auth/me');\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,MAAM;;AAEtB;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMK,WAAW,GAAG;EACzBC,KAAK,EAAE,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAChC,MAAMC,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,IAAI,CAAC,aAAa,EAAE;MAAEH,KAAK;MAAEC;IAAS,CAAC,CAAC;IACnE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDC,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAC5B,MAAMJ,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,IAAI,CAAC,gBAAgB,EAAEG,QAAQ,CAAC;IAC3D,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDG,cAAc,EAAE,MAAAA,CAAA,KAAY;IAC1B,MAAML,QAAQ,GAAG,MAAMhB,GAAG,CAACsB,GAAG,CAAC,UAAU,CAAC;IAC1C,OAAON,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,eAAelB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}